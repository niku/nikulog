* Packerを使ってVagrantのBoxを作る方法をステップバイステップで説明する

Packer を使って Vagrant の Box を OS インストールから作成できたので，ステップバイステップで説明する．

コードは github の [[https://github.com/niku/my-packer-and-vagrant-example/][niku/my-packer-and-vagrant-example]] にある．


** 読むと手に入るもの

: packer build wheezy64.json
と実行するだけで
「chef-solo が実行可能な Vagrant 用 Box を OS インストールから全自動で作成してくれる環境」
の作り方．

問題にあたったときに，どういうところを参考にしたらよいか，がわかる．(ように書きたいと考えている)

** 読んでも手に入らないもの

1. VirtualBox/Vagrant/Packer のインストール方法
2. Vagrant Box 作成のベストプラクティス

2 については [[https://github.com/jedi4ever/veewee/tree/master/templates][veewee/templates]] 以下を見るのがよい．今回もかなり参考にさせてもらった．

** 必要なソフト

- [[https://www.virtualbox.org/][VirtualBox]]
- [[http://www.vagrantup.com/][Vagrant]]
- [[http://www.vagrantup.com/][Packer]]

ホスト OS は windows7 である．

今回は VirtualBox4.2.16 / Vagrant1.2.7 / Packer 0.2.3 で行なった．

Packer は現在 (2013/08/20) 最新版が不安定なことがあるので，最新版で試してみて，うまくいかなければ 0.2.3 へダウングレードしてみるとよい．

僕が 0.3.x 系を試したときにはいくつか不安定な挙動をした．0.2.3 ではそのようなことはおきなかった．

** 0. テンプレート解析に失敗する

以降のステップは全て my-packer-and-vagrant-template ディレクトリで作業している．

#+BEGIN_SRC
$ packer build wheezy64.json
Failed to parse template: open wheezy.json: no such file or directory
#+END_SRC

まだ何も用意していないので当然エラーになる．

最小限のテンプレートを用意する．

[[http://www.packer.io/docs/templates/introduction.html][TEMPLATES]] には builders が必須 (required)，[[http://www.packer.io/docs/builders/virtualbox.html][VirtualBox Builder]] には
- iso_checksum_type
- iso_checksum
- iso_url
- ssh_username
が必須 (required) と書いてあるので，準備する．

[[https://github.com/niku/my-packer-and-vagrant-example/commit/7171bf7417fb8464fa2aab8044a351a05eef6d3d][7171bf7417fb8464fa2aab8044a351a05eef6d3d]] のようになる．

** 1. ブートメニューで止まる

: $ packer build wheezy64.json

すると，Debian の ISO がダウンロードされて

[[01-stop-at-boot-menu.png]]

のようにブート画面が起動する．しかしそこからは何も進まない．

大抵の OS には，ファイルを用意しておくと自動的にインストールを進めてくれるような機能が備わっており，
Packer ではそれを利用して OS の自動インストールを進められるようになっている．

その機能を利用するためには，最初に Boot Command というのものを入力しなければならないが，すぐに理解するのは難しい．
そこで [[https://github.com/jedi4ever/veewee/tree/master/templates][veewee のテンプレート]] を流用させてもらうことにする．リンク先を見てわかるように主要な OS のテンプレートは揃っている．

[[https://github.com/jedi4ever/veewee/blob/master/templates/Debian-7.1.0-amd64-netboot/definition.rb][veewee の definition.rb]] を開くと，:boot_cmd_sequence という項目がある．その部分をコピーして

1. JSON として利用するために '( シングルクォート ) を "( ダブルクォート ) に変更
2. Packer のキーシュミレートにあわせて <Abc> を <abc> のように変更
3. Packer の変数にあわせて %IP% を {{ .HTTPIP }} のように変更

の 3 つを行った．

Packer の Boot Command の詳細は [[http://www.packer.io/docs/builders/virtualbox.html][VirtualBox Builder]] に記述がある．

[[https://github.com/niku/my-packer-and-vagrant-example/commit/965428a5ced59ace6ce772d8caee42cd86f34a11][965428a5ced59ace6ce772d8caee42cd86f34a11]] のようになる．

** 2. ブートコマンド入力中に止まる

前回と同じように

: $ packer build wheezy64.json -force

すると，ブート画面が起動する．(force は，[[http://www.packer.io/docs/command-line/build.html][作りかけのディレクトリを強制的に上書きするオプション]])

10 秒くらい待つと画面が切り換わって，文字を入力しはじめるが，図のような状態で止まってしまう．

[[02-stop-at-boot-command.png]]

i が入力されておらず install ではなく nstall になってしまっているせいである．

Boot Command はキー入力をエミュレートしているので「画面が切り換わったら」という処理には対応していない．(画面を見ずにキーを入力しているのと同じ)

そこで，ブート画面起動 -> 10 秒くらい待つ -> Esc を押す -> install を入力するのあいだにウェイト処理を入れ，ブート画面起動 -> 10 秒くらい待つ -> Esc を押す -> 1 秒待つ -> install とする．

キー入力のウェイト制御は [[http://www.packer.io/docs/builders/virtualbox.html][Boot Command の <wait>]] で行う．今回の自分の環境では起こらなかったが，もしブート画面が起動する前にキー入力が始まってしまう場合は [[http://www.packer.io/docs/builders/virtualbox.html][boot_wait]] の時間を伸ばしてみるとよい．

差分は [[https://github.com/niku/my-packer-and-vagrant-example/commit/6a29e4df31e804c93672ad8e5ea37ca4f0852884][6a29e4df31e804c93672ad8e5ea37ca4f0852884]] のようになる．

** 3. コンフィグファイルがダウンロードできなくて止まる

: $ packer build wheezy64.json -force

すると，ブート画面が起動して，ブートコマンドが入力され，エラー画面になる．

[[03-fail-at-download-debconf-preconfiguration-file.png]]

OS のインストールをする際，いくつか設定が必要である．OS を自動的にインストールするためには，それらの設定を自動で行う必要がある．各 OS には，たいてい自動インストール用の設定を取得する方法が用意されている．

Packer では自動インストールが簡単にできるように，いくつかの仕組みを用意している．

Debian, Ubuntu, CentOS などではネットワーク越しに自動インストールの設定が取得できるようになっている．
Packer は HTTP サーバーになる機能をもっていて，[[http://www.packer.io/docs/builders/virtualbox.html][http_directory]] を指定すれば，その下にあるファイルを HTTP サーバー越しに取得できる．

Windows ではフロッピーディスクから自動インストールの設定が取得できるようになっている．
Packer はフロッピーディスクをエミュレートする機能をもっていて，[[http://www.packer.io/docs/builders/virtualbox.html][floppy_files]] を指定すれば，そのファイルをフロッピードライブ越しに取得できる．

今回は Debian をインストールしているので http_directory を指定して，そこに自動インストールの設定を置いた．
設定ファイルの書き方やサンプルは各 OS のマニュアルに用意されているはずなので，そこから探す．
今回の場合だと[[http://www.debian.org/releases/stable/amd64/apbs04.html.ja][事前設定ファイルの内容 (wheezy 用)]] というページを参考に [[http://www.debian.org/releases/wheezy/example-preseed.txt]] から取得してきた．

- [[https://github.com/niku/my-packer-and-vagrant-example/tree/0405ae17533c3eb2a959f4223594a7c99f0c3ed5][ここまでの状態]]
- [[https://github.com/niku/my-packer-and-vagrant-example/commit/0405ae17533c3eb2a959f4223594a7c99f0c3ed5][前回からの差分]]

** 4. ルートパスワード入力待ちで止まる

: $ packer build wheezy64.json -force

すると，ブート画面が起動して，ブートコマンドが入力され，しばらく待つとルートパスワード入力画面になって止まる．

[[04-stop-at-input-root-password.png]]

ここからは[[http://www.debian.org/releases/stable/amd64/apbs04.html.ja][事前設定ファイルの内容の説明]]，事前設定ファイルに書いてあるコメント，グーグル，勘の 4 つを駆使して作業を進める．
ここには正解ルートがスラスラと書いてあるので，全然悩まなかったようにみえるだろうが，実際には多少悩みながら行きつ戻りつ作業していた．
もしうまくいかなくても，コマンド一つで再チャレンジできるので，気楽に変更してみるとよい．

画面の内容を見ると，root password の入力が必要らしい．事前設定ファイルの説明を password で検索すると，B.4.5 にアカウント設定というのがあるので，これだろう．

今回は，Debian でよくある root でログインしない（かわりに各ユーザーの sudo 権限で操作する）という方式にしようと思うので

: #d-i passwd/root-login boolean false
を
: d-i passwd/root-login boolean false
とコメントアウトする．

- [[https://github.com/niku/my-packer-and-vagrant-example/tree/858351d5dc0403e306dc0d6b600a6b9a21bd3069][ここまでの状態]]
- [[https://github.com/niku/my-packer-and-vagrant-example/commit/858351d5dc0403e306dc0d6b600a6b9a21bd3069][前回からの差分]]

** 5. ユーザー名 ( フルネーム ) 入力待ちで止まる

: $ packer build wheezy64.json -force

すると，ブート画面が起動して，ブートコマンドが入力され，しばらく待つとユーザー名 ( フルネーム ) 入力画面になって止まる．

[[05-stop-at-input-user-full-name.png]]

"4. ルートパスワード入力待ちで止まる" と同様に，事前設定ファイルの説明 B.4.5 をみて

: #d-i passwd/user-fullname string Debian User
を
: d-i passwd/user-fullname string Vagrant User
とコメントアウトする．

後述するように [[http://docs-v1.vagrantup.com/v1/docs/base_boxes.html][Vagrant が期待する初期値 ( Convention over Configration を参照のこと )]] はある．しかしフルネームは特に決まっていないようなので，適当に名付けてよい．

** 6. ユーザー名入力待ちで止まる

: $ packer build wheezy64.json -force

すると，ブート画面が起動して，ブートコマンドが入力され，しばらく待つとユーザー名入力画面になって止まる．

[[06-stop-at-input-username.png]]

後で使う [[http://docs-v1.vagrantup.com/v1/docs/base_boxes.html][Vagrant では初期ユーザー名に指定がある ( Convention over Configration を参照のこと )]] ので，それに従い vagrant と名付けることにする．

: #d-i passwd/username string debian
を
: d-i passwd/username string vagrant
にする．

- [[https://github.com/niku/my-packer-and-vagrant-example/tree/ac93354afa53fe3df9c44574f7723e0da10024ad][ここまでの状態]]
- [[https://github.com/niku/my-packer-and-vagrant-example/commit/ac93354afa53fe3df9c44574f7723e0da10024ad][前回からの差分]]


** 7. パスワード入力待ちで止まる

: $ packer build wheezy64.json -force

すると，ブート画面が起動して，ブートコマンドが入力され，しばらく待つとパスワード入力画面になって止まる．

[[07-stop-at-input-password.png]]

[[http://docs-v1.vagrantup.com/v1/docs/base_boxes.html][Vagrant では初期パスワードに指定がある ( Convention over Configration を参照のこと )]] ので，それに従い vagrant と名付けることにする．

: #d-i passwd/user-password password insecure
を
: d-i passwd/user-password password vagrant
にする．

- [[https://github.com/niku/my-packer-and-vagrant-example/tree/3d97b15dc57ab27b0f1f2553b768f25fb979599b][ここまでの状態]]
- [[https://github.com/niku/my-packer-and-vagrant-example/commit/3d97b15dc57ab27b0f1f2553b768f25fb979599b][前回からの差分]]

** 8. 再パスワード入力待ちで止まる

: $ packer build wheezy64.json -force

すると，ブート画面が起動して，ブートコマンドが入力され，しばらく待つと再パスワード入力画面になって止まる．

[[08-stop-at-input-password-verify.png]]

当然 "7. パスワード入力待ちで止まる" と同じものを設定しないとエラーになる ( はず．試してはいない…… ) ので vagrant と入力する．

: #d-i passwd/user-password-again password insecure
を
: d-i passwd/user-password-again password vagrant
にする．

- [[https://github.com/niku/my-packer-and-vagrant-example/tree/18f78b2779d85b8b3c063a360e093203610abc88][ここまでの状態]]
- [[https://github.com/niku/my-packer-and-vagrant-example/commit/18f78b2779d85b8b3c063a360e093203610abc88][前回からの差分]]

** 9. パッケージ人気投票参加選択待ちで止まる

: $ packer build wheezy64.json -force

すると，ブート画面が起動して，ブートコマンドが入力され，しばらく待つと[[http://popcon.debian.org/][パッケージ人気投票]]参加選択待ちで止まる．

[[09-stop-at-choose-to-participate-popularity-contest.png]]

（文字がぐちゃっとなるのが気になるが原因は調べていない．読めはするので今回は気にしないことにした）

人気投票は debian が，どのパッケージが人気か調べて インストール用 CD の 1 枚目に入れるパッケージを決めたりするのに使う．
週に 1 回の送信で，かつ匿名なので参加してもかまわないのだが，今回は参加しないことにする．

[[https://github.com/niku/my-packer-and-vagrant-example/blob/18f78b2779d85b8b3c063a360e093203610abc88/preseed.cfg][preseed.cfg]] を popularity で検索すると
: #popularity-contest popularity-contest/participate boolean false
という，それらしいものが検索にひっかかる．

これをコメントアウトして
: popularity-contest popularity-contest/participate boolean false
にする．

- [[https://github.com/niku/my-packer-and-vagrant-example/tree/e33b1caa6f4801d1d8ce7b491a75cda019393b4e][ここまでの状態]]
- [[https://github.com/niku/my-packer-and-vagrant-example/commit/e33b1caa6f4801d1d8ce7b491a75cda019393b4e][前回からの差分]]
